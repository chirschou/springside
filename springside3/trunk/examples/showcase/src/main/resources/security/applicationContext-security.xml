<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.4.xsd"
	default-lazy-init="true">

	<description>使用SpringSecurity的安全配置文件</description>

	<!-- 在此定义URL与授权的关系. 而用户、角色、授权及三者的关系则保存在数据库中. -->
	<security:http auto-config="true" access-decision-manager-ref="accessDecisionManager">
		<security:intercept-url pattern="/common/user!input*" access="A_用户" />
		<security:form-login login-page="/security/login.action" default-target-url="/"
			authentication-failure-url="/security/login.action?error=true" />
		<security:logout logout-success-url="/" />
		<security:remember-me key="e37f4b31-0c45-11dd-bd0b-0800200c9a66" />
	</security:http>

	<security:authentication-provider user-service-ref="userDetailsService">
		<!-- 可设置hash使用sha1或md5散列密码后再存入数据库 -->
		<security:password-encoder hash="plaintext" />
	</security:authentication-provider>

	<!-- 将授权的默认前缀由ROLE_改为A_ -->
	<bean id="accessDecisionManager" class="org.springframework.security.vote.AffirmativeBased">
		<property name="decisionVoters">
			<list>
				<bean class="org.springframework.security.vote.RoleVoter">
					<property name="rolePrefix" value="A_" />
				</bean>
				<bean class="org.springframework.security.vote.AuthenticatedVoter" />
			</list>
		</property>
	</bean>

	<!-- 用户查询服务  -->
	<bean id="userDetailsService" class="org.springside.examples.showcase.security.UserDetailServiceImpl" />

	<!--JCaptcha验证码服务 -->
	<bean id="captchaService" class="com.octo.captcha.service.image.DefaultManageableImageCaptchaService">
		<!-- 默认使用GmailEngine, 可选HotmailEngine或Hotmail2008Engine-->
		<property name="captchaEngine">
			<bean class="com.octo.captcha.engine.image.gimpy.GmailEngine" />
		</property>
		<!-- 默认生成的图片180秒过期 , 可另行设置-->
		<property name="minGuarantedStorageDelayInSeconds" value="180" />
	</bean>
</beans>