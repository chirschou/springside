<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<artifactId>springside3-parent</artifactId>
		<groupId>org.springside</groupId>
		<version>3.2.3-SNAPSHOT</version>
	</parent>
	<artifactId>springside3-war-parent</artifactId>
	<packaging>pom</packaging>
	<name>Springside3's web project parent pom.xml</name>
	<build>
		<plugins>
			<!-- war插件-->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.1-beta-1</version>
				<configuration>
					<warName>${project.artifactId}</warName>
				</configuration>
			</plugin>

			<!-- Eclipse plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<configuration>
					<wtpversion>2.0</wtpversion>
				</configuration>
			</plugin>

			<!-- Jetty plugin -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.22</version>
				<configuration>
					<scanIntervalSeconds>5</scanIntervalSeconds>
				</configuration>

			</plugin>
		</plugins>
	</build>

	<profiles>
		<!-- 在integration-test阶段执行功能测试的profile, 以-Pfunctional激活 -->
		<profile>
			<id>functional</id>
			<build>
				<plugins>
					<!-- dbunit插件初始化测试数据 -->
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>dbunit-maven-plugin</artifactId>
						<executions>
							<execution>
								<id>init-functional-data</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>operation</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- jetty插件启动与关闭应用 -->
					<plugin>
						<groupId>org.mortbay.jetty</groupId>
						<artifactId>maven-jetty-plugin</artifactId>
						<executions>
							<execution>
								<id>start-jetty</id>
								<phase>pre-integration-test</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<stopPort>9966</stopPort>
									<stopKey>STOP</stopKey>
									<scanIntervalSeconds>0</scanIntervalSeconds>
									<daemon>true</daemon>
								</configuration>
							</execution>
							<execution>
								<id>stop-jetty</id>
								<phase>post-integration-test</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- surefire插件执行functional目录的用例 -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-surefire-plugin</artifactId>
						<executions>
							<execution>
								<id>functional-test</id>
								<phase>integration-test</phase>
								<goals>
									<goal>test</goal>
								</goals>
								<configuration>
									<includes>
										<include>**/functional/**/*Test.java</include>
									</includes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- 以cluster模式打包war文件和运行jetty的profile,以-Dcluster.nodename=xxx 激活 -->
		<profile>
			<id>cluster</id>
			<activation>
				<property>
					<name>cluster.nodename</name>
				</property>
			</activation>

			<build>
				<!-- war插件, 指定打包war文件时加入节点特定的配置文件 -->
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<configuration>
							<warName>${project.artifactId}-${cluster.nodename}</warName>
							<filters>
								<filter>src/cluster/nodes/${cluster.nodename}.properties</filter>
							</filters>
							<webResources>
								<resource>
									<filtering>true</filtering>
									<directory>src/cluster/webapp-override</directory>
								</resource>
							</webResources>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
